trigger: none

# schedules:
# - cron: "30 11 * * 3,5" 
#   displayName: Weekly build
#   branches:
#     include:
#       - develop
#       - features/*
#       - main

pool:
  vmImage: ubuntu-latest


variables:
  image_tag: $(Build.BuildId)

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:

  - job: BuildAndTest
    displayName: 'Build and Test'
    steps:
    
    - checkout: self
      fetchDepth: 0
    
    - task: SonarQubePrepare@6
      inputs:
        SonarQube: 'SonarAzure'
        scannerMode: 'Other'
        extraProperties: |
          sonar.projectKey=devops_mini_1_java_yaml_azure_e52a99f1-0e3b-4d88-9758-b1bcc4cf19a5
          sonar.projectName=java_yaml_azure
          sonar.coverage.jacoco.xmlReportPaths=**/jacoco.xml

    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        codeCoverageToolOption: 'JaCoCo'
        codeCoverageRestoreOriginalPomXml: true
        sonarQubeRunAnalysis: true
        sqMavenPluginVersionChoice: 'latest'
        goals: 'clean install sonar:sonar'
        options: '-Dmaven.test.failure.ignore=true'

    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      inputs:
        testResultsFiles: '**/surefire-reports/*.xml'
        testRunTitle: 'JUnit Test Results'

    - task: SonarQubePublish@6
      inputs:
        pollingTimeoutSec: '300'

    - task: DockerInstaller@0
      inputs:
        dockerVersion: '17.09.0-ce'
    - task: Docker@2
      inputs:
        containerRegistry: 'mydockeraccount'
        repository: 'hacktom007/java-docker'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'

- stage: Deploy
  displayName: 'Deploy Stage'
  jobs:
  - job: DeployToAKS
    displayName: 'Deploy to AKS'
    steps:
    - task: replacetokens@6
      inputs:
        sources: '**/*.yaml'
    - task: KubernetesManifest@1
      inputs:
        action: 'deploy'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'myaks1014'
        manifests: |
          k8s/deployment.yaml
          k8s/service.yaml
        containers: 'hacktom007/java-docker:$(Build.BuildId)'

- stage: ErrorHandler
  displayName: 'Error Handling Stage'
  jobs:
  - job: HandleError
    displayName: 'Handle Build Failure'
    condition: failed()
    steps: 
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          az boards work-item create `
            --title "Build $(build.buildNumber) failed" `
            --type issue `
            --org $(System.TeamFoundationCollectionUri) `
            --project $(System.TeamProject)
      env: 
        AZURE_DEVOPS_EXT_PAT: $(System.AccessToken)
      displayName: 'Create work item on failure'
